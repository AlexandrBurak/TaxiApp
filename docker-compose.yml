version: '3.3'
services:
  userservice:
    container_name: golang_container
    build:
      context: .
    ports:
      - "8080:8080"
    restart: on-failure

    depends_on:
      - postgresdb
      - cache
      - mongodb
      - prometheus
      - grafana



  postgresdb:
    image: postgres:latest
    container_name: postgres_container
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    ports:
      - '1234:5432'
    volumes:
      - ./pg_data:/var/lib/postgresql/data



  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1

  mongodb:
    image: mongo:5.0
    ports:
      - '5678:5678'




  prometheus:
    image: prom/prometheus
    restart: always

    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"






  grafana:
    image: grafana/grafana
    user: '472'
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus



  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    ports:
      - "9100:9100"
    restart: always
